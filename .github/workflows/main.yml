name: SmartChart
run-name: Running
on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
    # --------------------------추가
env:
  PROJECT_NAME: smart_chart
  BUCKET_NAME: smartchartbucket
  CODE_DEPLOY_APP_NAME: moduform_cicd
  DEPLOYMENT_GROUP_NAME: moduform_instance
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: 프로젝트 빌드
        run: ./gradlew clean build -x test
        # --------------------------추가      
      - name: Make Zip File
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Print current directory
        run: pwd

      - name: Find .env file
        run: find /home/runner/work/Smart_Chart_Server/Smart_Chart_Server -name .env

      - name: Create .env file
        run: echo "DB_PASSWORD=your_password" >> /home/runner/work/Smart_Chart_Server/Smart_Chart_Server/.env


      - name: List workspace contents
        run: ls -R /github/workspace

      - name: Set up environment
        run: |
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}" >> .env
          # Print the contents of .env file for debugging
          cat .env


      
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy To EC2 instance
        run: aws deploy create-deployment 
                --application-name $CODE_DEPLOY_APP_NAME 
                --deployment-config-name CodeDeployDefault.AllAtOnce
                --deployment-group-name $DEPLOYMENT_GROUP_NAME 
                --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
