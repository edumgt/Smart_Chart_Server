server:
  port: 8080

# 배포한 서버의 주소
backend:
  url: http://13.125.227.145

# 프록시 설정
tomcat:
  accesslog:
    enabled: true  # 접근 로그를 활성화

  connector:
    scheme: http
    proxyName: 13.125.227.145  # 프록시 서버의 IP 주소
    proxyPort: 8080  # 프록시 서버의 포트




spring:
  mvc:
    hiddenmethod:
      filter:
        enabled: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://smart-chart.crbbls80erbp.ap-northeast-2.rds.amazonaws.com:3306/smart_chart?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
    username: root
    password: rootroot
  jpa:
    show-sql: true # true?? JPA ??? ?? ??
    hibernate:
      ddl-auto: update # create:????? ?? ? ?? ??  create-drop:drop+create+drop(???) update:???? ???? ???? ????? ??(??? create), validate:??? ??? ????? ??X, none:?????? ????
    # show-sql: true # DDL ??
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: true # jpa ???? ??????? ????? ??? SQL ???? ????




  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: 338b152f34fe502634c3e709272cd726
            client-secret: 0L8IZ0nrmteqS73N0CSe8JTkBqEYyDkg
            scope:
              - account_email
            client-name: Kakao
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            redirect-uri: http://13.125.227.145:8080/auth/kakao/callback

            # 네이버, 카카오는 OAuth2.0 공식 지원대상이 아니라서 provider 설정이 필요하다.
            # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
            # https://developers.naver.com/docs/login/devguide/#2-2-1-%EC%86%8C%EC%85%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8
            # https://developers.kakao.com/docs/latest/ko/kakaologin/rest-api
        provider:
          #          naver:
          #            authorization-uri: https://nid.naver.com/oauth2.0/authorize
          #            token-uri: https://nid.naver.com/oauth2.0/token
          #            user-info-uri: https://openapi.naver.com/v1/nid/me
          #            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id # id로 안하면... 고생함


# 카카오 로그인시 쓰는 비밀번호
cos:
  key: cos1234





# 네이버 sms api
sms:
  serviceId: ncp:sms:kr:314539136902:smart_chart
  accessKey: QSaZ7wAsbyssaN3ws9PW
  secretKey: aKG034PzvqUTQiVmmZGtcaA9M7CHmZA1zMHdYbXi
  from: 01071979532



  # Gmail SMTP 비밀번호 찾기(이메일 보내기)
  mail:
    host: smtp.gmail.com
    port: 587
    username: dbfl720@gmail.com
    password: lavwqdbcspqkjaxm
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true


  # 네이버 지역 api
naver:
  url:
    search:
      local: https://openapi.naver.com/v1/search/blog.json
      image: https://openapi.naver.com/v1/search/image
  client:
    id: yM8RRFvCe5dD3Ki1IREe
    secret: 5rdfphHO_E


logging:
  file:
    path: /home/ubuntu/smart_chart/log/directory
    name: my-application.log


